name: Serwisomat Workflow

on:
  workflow_dispatch:
    inputs:
      customer_email:
        description: 'Email Klienta'
        required: true
      device_description:
        description: 'Opis Urządzenia'
        required: true
      repair_approved:
            description: 'Repair Approved'
            required: true
jobs:
  process_repair:
    runs-on: ubuntu-latest
    steps:
      - name: Zgłoszenie naprawy
        run: |
             echo "Zgłoszenie przyjęte od ${{ github.event.inputs.customer_email }} dla urządzenia: ${{ github.event.inputs.device_description }}"

      - name: Przyjęcie urządzenia
        run: echo "Urządzenie przyjęte do serwisu"

      - name: Diagnoza
        run: echo "Diagnoza urządzenia w toku"

      - name: Wycena naprawy
        run: echo "Wycena wysłana do klienta. Oczekiwanie na odpowiedź..."
        # Tutaj możesz zintegrować logikę wysyłania wyceny do klienta przez zewnętrzne narzędzie

  # Możesz mieć osobny workflow dla akceptacji naprawy przez klienta,
  # który będzie wyzwalany, gdy klient podejmie decyzję.
  repair_decision:
    needs: process_repair
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.repair_approved == 'true' }}
    steps:
      - name: Naprawa urządzenia
        run: echo "Naprawa urządzenia w toku"

  # Możesz również mieć osobny workflow dla opłaty diagnozy,
  # który będzie wyzwalany, gdy klient odmówi naprawy.
  diagnosis_fee:
    needs: process_repair
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.repair_approved == 'false' }}
    steps:
      - name: Opłata za diagnozę
        run: echo "Opłata za diagnozę naliczona. Klient zostanie poinformowany."
